{"version":3,"sources":["assets/Text.png","assets/Button.png","assets/Selectable.png","assets/Loader.png","CodeContainer.js","TextDoc.js","ButtonDoc.js","SelectableDoc.js","LoaderDoc.js","RightPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CodeContainer","text","style","fontSize","fontWeight","marginTop","marginBottom","className","customStyle","lineHeight","language","docco","highlighter","textString","TextDoc","src","TextMockup","buttonString","ButtonDoc","ButtonMockup","selectableString","SelectableDoc","SelectableMockup","loaderString","LoaderDoc","LoaderMockup","RightPanel","selected","flex","display","flexDirection","justifyContent","getData","App","useState","setSelected","backgroundColor","expanded","onSelect","index","console","log","Nav","defaultSelected","eventKey","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,iQCgC5BC,MA3Bf,YAAkC,IAATC,EAAQ,EAARA,KACvB,OACE,oCACE,wBACEC,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,UAAW,EACXC,aAAc,KALlB,cAUA,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CACEC,YAAa,CAAEL,SAAU,GAAIM,WAAY,GACzCC,SAAS,QACTR,MAAOS,QACPC,YAAa,SAEZX,M,iBCpBLY,EACJ,uMAyDaC,MAvDf,WACE,OACE,oCACE,6BACE,6BACE,kBAAC,EAAD,CAAeb,KAAMY,KAEvB,wBACEX,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,UAAW,GACXC,aAAc,KALlB,gBAUA,+BACE,4BACE,wCACA,uCACA,sCACA,4CAEF,4BACE,qCACA,oCACA,sCACA,2CAEF,4BACE,yCACA,oCACA,sCACA,+CAEF,4BACE,0CACA,uCACA,sCACA,4CAEF,4BACE,0CACA,6BACA,sCACA,8CAIN,yBAAKS,IAAKC,Q,iBCrDVC,EACJ,yYAgKaC,MA9Jf,WACE,OACE,oCACE,6BACE,6BACE,kBAAC,EAAD,CAAejB,KAAMgB,KAEvB,wBACEf,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,UAAW,GACXC,aAAc,KALlB,gBAUA,+BACE,4BACE,wCACA,uCACA,sCACA,sCACA,4CAEF,4BACE,qCACA,6BACA,sCACA,6BACA,yDAEF,4BACE,oCACA,qCACA,sCACA,sDACA,6CAEF,4BACE,oCACA,sCACA,sCACA,sDACA,4CAEF,4BACE,uCACA,qCACA,uCACA,6BACA,kDAEF,4BACE,wCACA,qCACA,uCACA,6BACA,mDAEF,4BACE,uCACA,6BACA,wCACA,6BACA,iDAEF,4BACE,0CACA,qCACA,sCACA,6BACA,kDAEF,4BACE,oCACA,6BACA,sCACA,6BACA,0CAEF,4BACE,yCACA,qCACA,sCACA,6BACA,2CAEF,4BACE,qCACA,uCACA,sCACA,6BACA,wDAEF,4BACE,0CACA,6BACA,sCACA,6BACA,4CAEF,4BACE,qCACA,qCACA,uCACA,6BACA,uDAEF,4BACE,2CACA,qCACA,uCACA,6BACA,4DAEF,4BACE,sCACA,qCACA,uCACA,6BACA,kEAEF,4BACE,sCACA,iCACA,sCACA,6BACA,oEAEF,4BACE,2CACA,qCACA,sCACA,6BACA,6CAEF,4BACE,8CACA,6BACA,sCACA,6BACA,uDAEF,4BACE,qCACA,uCACA,sCACA,+CACA,wDAIN,yBAAKS,IAAKI,Q,iBC5JVC,EAAmB,y8BAoIVC,MAlIf,WACE,OACE,oCACE,6BACE,6BACE,kBAAC,EAAD,CAAepB,KAAMmB,KAEvB,wBACElB,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,UAAW,GACXC,aAAc,KALlB,gBAUA,+BACE,4BACE,wCACA,uCACA,sCACA,sCACA,4CAEF,4BACE,wCACA,qCACA,uCACA,6BACA,4CAEF,4BACE,uDACA,4CACA,sCACA,6BACA,+DAEF,4BACE,kDACA,uCACA,sCACA,6BACA,0DAEF,4BACE,sDACA,6CACA,sCACA,6BACA,mEAEF,4BACE,iDACA,oCACA,sCACA,6BACA,8DAEF,4BACE,uCACA,qCACA,uCACA,6BACA,2CAEF,4BACE,uCACA,6BACA,wCACA,6BACA,kDAEF,4BACE,oCACA,qCACA,wCACA,sDACA,gDAEF,4BACE,qCACA,6BACA,sCACA,6BACA,iDAEF,4BACE,wCACA,6BACA,sCACA,6BACA,oDAEF,4BACE,yCACA,6BACA,sCACA,6BACA,6DAEF,4BACE,iDACA,qCACA,sCACA,6CACA,0DAEF,4BACE,0CACA,uCACA,sCACA,6BACA,kDAEF,4BACE,8CACA,6BACA,sCACA,6BACA,6DAIN,yBAAKS,IAAKO,Q,iBC/HVC,EACJ,qEAgDaC,MA9Cf,WACE,OACE,oCACE,6BACE,6BACE,kBAAC,EAAD,CAAevB,KAAMsB,KAEvB,wBACErB,MAAO,CACLC,SAAU,GACVC,WAAY,OACZC,UAAW,GACXC,aAAc,KALlB,gBAUA,+BACE,4BACE,wCACA,uCACA,sCACA,sCACA,4CAEF,4BACE,qCACA,qCACA,sCACA,6BACA,6CAEF,4BACE,oCACA,qCACA,sCACA,6CACA,8CAIN,yBAAKS,IAAKU,QCVDC,MAjBf,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OACE,yBAAKpB,UAAU,cACb,yBACEL,MAAO,CACL0B,KAAM,EACNC,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAvB1B,SAAiBJ,GACf,OAAQA,GACN,IAAK,OACH,OAAO,kBAAC,EAAD,MACT,IAAK,SACH,OAAO,kBAAC,EAAD,MACT,IAAK,aACH,OAAO,kBAAC,EAAD,MACT,IAAK,SACH,OAAO,kBAAC,EAAD,MACT,QACE,OAAO,kBAAC,EAAD,OAeJK,CAAQL,MCOFM,MAjCf,WAAgB,IAAD,EACmBC,mBAAS,QAD5B,mBACNP,EADM,KACIQ,EADJ,KAGb,OACE,yBAAK5B,UAAU,OACb,kBAAC,IAAD,CACEL,MAAO,CAAEkC,gBAAiB,WAC1BC,UAAQ,EACRC,SAAU,SAAAC,GACRC,QAAQC,IAAI,QAASF,GACrBJ,EAAYI,KAGd,kBAAC,IAAQG,IAAT,CAAaC,gBAAgB,QAC3B,kBAAC,UAAD,CAASC,SAAS,QAChB,kBAAC,UAAD,CAAS1C,MAAO,CAAEE,WAAY,SAA9B,SAEF,kBAAC,UAAD,CAASwC,SAAS,UAChB,kBAAC,UAAD,CAAS1C,MAAO,CAAEE,WAAY,SAA9B,WAEF,kBAAC,UAAD,CAASwC,SAAS,cAChB,kBAAC,UAAD,CAAS1C,MAAO,CAAEE,WAAY,SAA9B,eAEF,kBAAC,UAAD,CAASwC,SAAS,UAChB,kBAAC,UAAD,CAAS1C,MAAO,CAAEE,WAAY,SAA9B,aAIN,kBAAC,EAAD,CAAYuB,SAAUA,MCvBRkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.246d7588.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Text.3c23e728.png\";","module.exports = __webpack_public_path__ + \"static/media/Button.b3d7e5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/Selectable.44d91f54.png\";","module.exports = __webpack_public_path__ + \"static/media/Loader.df9839bf.png\";","import React, { useState } from \"react\";\nimport \"./CodeContainer.css\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n\nfunction CodeContainer({ text }) {\n  return (\n    <>\n      <h2\n        style={{\n          fontSize: 20,\n          fontWeight: \"bold\",\n          marginTop: 0,\n          marginBottom: 10\n        }}\n      >\n        Components\n      </h2>\n      <div className=\"CodeContainer\">\n        <SyntaxHighlighter\n          customStyle={{ fontSize: 13, lineHeight: 2 }}\n          language=\"react\"\n          style={docco}\n          highlighter={\"prism\" || \"hljs\"}\n        >\n          {text}\n        </SyntaxHighlighter>\n      </div>\n    </>\n  );\n}\n\nexport default CodeContainer;\n","import React from \"react\";\nimport \"./RightPanel.css\";\nimport CodeContainer from \"./CodeContainer\";\nimport TextMockup from \"./assets/Text.png\";\n\nconst textString =\n  \"<LargeNumber>Large number</LargeNumber>\\n<LargeTitle>Large title</LargeTitle>\\n<H1>H1</H1>\\n<H2>H2</H2>\\n<H3>H3</H3>\\n<Body17>Body 17</Body17>\\n<Body15>Body 15</Body15>\\n<Caption>Caption</Caption>\";\n\nfunction TextDoc() {\n  return (\n    <>\n      <div>\n        <div>\n          <CodeContainer text={textString}></CodeContainer>\n        </div>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: \"bold\",\n            marginTop: 40,\n            marginBottom: 10\n          }}\n        >\n          Common props\n        </h2>\n        <table>\n          <tr>\n            <th>Property</th>\n            <th>Default</th>\n            <th>Option</th>\n            <th>Description</th>\n          </tr>\n          <tr>\n            <td>color</td>\n            <td>body</td>\n            <td>string</td>\n            <td>Text color</td>\n          </tr>\n          <tr>\n            <td>textAlign</td>\n            <td>left</td>\n            <td>string</td>\n            <td>Text alignment</td>\n          </tr>\n          <tr>\n            <td>fontFamily</td>\n            <td>cerebri</td>\n            <td>string</td>\n            <td>Font family</td>\n          </tr>\n          <tr>\n            <td>fontWeight</td>\n            <td></td>\n            <td>string</td>\n            <td>Font weight</td>\n          </tr>\n        </table>\n      </div>\n      <img src={TextMockup}></img>\n    </>\n  );\n}\n\nexport default TextDoc;\n","import React from \"react\";\nimport \"./RightPanel.css\";\nimport CodeContainer from \"./CodeContainer\";\nimport ButtonMockup from \"./assets/Button.png\";\n\nconst buttonString =\n  \"<Button title='Normal' />\\n<Button width='medium' title='Medium'/>\\n<Button type='outline' title='Outline' titleColor='primary'/>\\n<Button type='outline' title='Icon' titleColor='primary' icon='angle-down'/>\\n<Button type='link' title='Link' titleColor='primary'/>\\n<Button center title='Center'/>\\n<Button block title='Block'/>\\n<Button block loading title='Outline' titleColor='primary'/>\";\n\nfunction ButtonDoc() {\n  return (\n    <>\n      <div>\n        <div>\n          <CodeContainer text={buttonString}></CodeContainer>\n        </div>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: \"bold\",\n            marginTop: 40,\n            marginBottom: 10\n          }}\n        >\n          Common props\n        </h2>\n        <table>\n          <tr>\n            <th>Property</th>\n            <th>Default</th>\n            <th>Option</th>\n            <th>Values</th>\n            <th>Description</th>\n          </tr>\n          <tr>\n            <td>title</td>\n            <td></td>\n            <td>string</td>\n            <td></td>\n            <td>Displayed text in button</td>\n          </tr>\n          <tr>\n            <td>type</td>\n            <td>solid</td>\n            <td>string</td>\n            <td>solid | outline | link</td>\n            <td>Button style</td>\n          </tr>\n          <tr>\n            <td>size</td>\n            <td>medium</td>\n            <td>string</td>\n            <td>small | medium | apple</td>\n            <td>Button size</td>\n          </tr>\n          <tr>\n            <td>loading</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Button is loading</td>\n          </tr>\n          <tr>\n            <td>disabled</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Button is disabled</td>\n          </tr>\n          <tr>\n            <td>onPress</td>\n            <td></td>\n            <td>function</td>\n            <td></td>\n            <td>onPress function</td>\n          </tr>\n          <tr>\n            <td>titleColor</td>\n            <td>white</td>\n            <td>string</td>\n            <td></td>\n            <td>Button text color</td>\n          </tr>\n          <tr>\n            <td>icon</td>\n            <td></td>\n            <td>string</td>\n            <td></td>\n            <td>Icon name</td>\n          </tr>\n          <tr>\n            <td>iconColor</td>\n            <td>white</td>\n            <td>string</td>\n            <td></td>\n            <td>Icon color</td>\n          </tr>\n          <tr>\n            <td>color</td>\n            <td>primary</td>\n            <td>string</td>\n            <td></td>\n            <td>Button background color</td>\n          </tr>\n          <tr>\n            <td>fontWeight</td>\n            <td></td>\n            <td>string</td>\n            <td></td>\n            <td>Font weight</td>\n          </tr>\n          <tr>\n            <td>block</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Button take full width</td>\n          </tr>\n          <tr>\n            <td>fixedBottom</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Add margin bottom to button</td>\n          </tr>\n          <tr>\n            <td>center</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Possibility to auto center button</td>\n          </tr>\n          <tr>\n            <td>radius</td>\n            <td>5</td>\n            <td>number</td>\n            <td></td>\n            <td>Possibility to custom border radius</td>\n          </tr>\n          <tr>\n            <td>loaderColor</td>\n            <td>white</td>\n            <td>string</td>\n            <td></td>\n            <td>Loader color</td>\n          </tr>\n          <tr>\n            <td>containerStyle</td>\n            <td></td>\n            <td>object</td>\n            <td></td>\n            <td>Button container style</td>\n          </tr>\n          <tr>\n            <td>width</td>\n            <td>default</td>\n            <td>string</td>\n            <td>default | other</td>\n            <td>Change button padding</td>\n          </tr>\n        </table>\n      </div>\n      <img src={ButtonMockup}></img>\n    </>\n  );\n}\n\nexport default ButtonDoc;\n","import React from \"react\";\nimport \"./RightPanel.css\";\nimport CodeContainer from \"./CodeContainer\";\nimport SelectableMockup from \"./assets/Selectable.png\";\n\nconst selectableString = \"<Selectable fontWeight='semibold' size='large' title='Title here' subTitle='Subtitle here' selected={false} selectedBackgroundColor='primary' selectedTitleColor='white'/>\\n<Selectable fontWeight='semibold' size='large' title='Title here' subTitle='Subtitle here' selected={true} selectedBackgroundColor='primary' selectedTitleColor='white'/>\\n<Selectable size='medium' title='Round selectable' selected={true} rounded/>\\n<Selectable size='medium' title='Petit bricolage' selected={true} rounded skillIcon={skillIcon}/>\\n<Selectable size='medium' title='No background' selected={false} defaultTitleColor='muted' selectedBackgroundColor='veryLightGrey' defaultBackgroundColor='transparent' fontWeight='semibold' paddingHorizontal='medium'/>\\n<Selectable size='medium' title='No background selected' selected={true} defaultTitleColor='muted' selectedBackgroundColor='veryLightGrey' defaultBackgroundColor='transparent' fontWeight='semibold' paddingHorizontal='medium'/>\"\n\nfunction SelectableDoc() {\n  return (\n    <>\n      <div>\n        <div>\n          <CodeContainer text={selectableString}></CodeContainer>\n        </div>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: \"bold\",\n            marginTop: 40,\n            marginBottom: 10\n          }}\n        >\n          Common props\n        </h2>\n        <table>\n          <tr>\n            <th>Property</th>\n            <th>Default</th>\n            <th>Option</th>\n            <th>Values</th>\n            <th>Description</th>\n          </tr>\n          <tr>\n            <td>selected</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Is selected</td>\n          </tr>\n          <tr>\n            <td>selectedBackgroundColor</td>\n            <td>lightPrimary</td>\n            <td>string</td>\n            <td></td>\n            <td>Background color when selected</td>\n          </tr>\n          <tr>\n            <td>selectedTitleColor</td>\n            <td>primary</td>\n            <td>string</td>\n            <td></td>\n            <td>Title color when selected</td>\n          </tr>\n          <tr>\n            <td>defaultBackgroundColor</td>\n            <td>veryLightGrey</td>\n            <td>string</td>\n            <td></td>\n            <td>Background color when not selected</td>\n          </tr>\n          <tr>\n            <td>defaultTitleColor</td>\n            <td>body</td>\n            <td>string</td>\n            <td></td>\n            <td>Title color when not selected</td>\n          </tr>\n          <tr>\n            <td>rounded</td>\n            <td>false</td>\n            <td>boolean</td>\n            <td></td>\n            <td>Is rounded</td>\n          </tr>\n          <tr>\n            <td>onPress</td>\n            <td></td>\n            <td>function</td>\n            <td></td>\n            <td>On press function</td>\n          </tr>\n          <tr>\n            <td>size</td>\n            <td>small</td>\n            <td>function</td>\n            <td>small | medium | large</td>\n            <td>Selectable size</td>\n          </tr>\n          <tr>\n            <td>title</td>\n            <td></td>\n            <td>string</td>\n            <td></td>\n            <td>Selectable title</td>\n          </tr>\n          <tr>\n            <td>subTitle</td>\n            <td></td>\n            <td>string</td>\n            <td></td>\n            <td>Selectable subtitle</td>\n          </tr>\n          <tr>\n            <td>skillIcon</td>\n            <td></td>\n            <td>string</td>\n            <td></td>\n            <td>Add skill icon to selectable</td>\n          </tr>\n          <tr>\n            <td>paddingHorizontal</td>\n            <td>small</td>\n            <td>string</td>\n            <td>small | large</td>\n            <td>Change padding horizontal</td>\n          </tr>\n          <tr>\n            <td>fontWeight</td>\n            <td>regular</td>\n            <td>string</td>\n            <td></td>\n            <td>Title font weight</td>\n          </tr>\n          <tr>\n            <td>containerStyle</td>\n            <td></td>\n            <td>object</td>\n            <td></td>\n            <td>Selectable container style</td>\n          </tr>\n        </table>\n      </div>\n      <img src={SelectableMockup}></img>\n    </>\n  );\n}\n\nexport default SelectableDoc;\n","import React from \"react\";\nimport \"./RightPanel.css\";\nimport CodeContainer from \"./CodeContainer\";\nimport LoaderMockup from \"./assets/Loader.png\";\n\nconst loaderString =\n  \"<Loader color='primary' />\\n<Loader color='primary' size='large'/>\";\n\nfunction LoaderDoc() {\n  return (\n    <>\n      <div>\n        <div>\n          <CodeContainer text={loaderString}></CodeContainer>\n        </div>\n        <h2\n          style={{\n            fontSize: 20,\n            fontWeight: \"bold\",\n            marginTop: 40,\n            marginBottom: 10\n          }}\n        >\n          Common props\n        </h2>\n        <table>\n          <tr>\n            <th>Property</th>\n            <th>Default</th>\n            <th>Option</th>\n            <th>Values</th>\n            <th>Description</th>\n          </tr>\n          <tr>\n            <td>color</td>\n            <td>white</td>\n            <td>string</td>\n            <td></td>\n            <td>Loader color</td>\n          </tr>\n          <tr>\n            <td>size</td>\n            <td>small</td>\n            <td>string</td>\n            <td>small | large</td>\n            <td>Loader size</td>\n          </tr>\n        </table>\n      </div>\n      <img src={LoaderMockup}></img>\n    </>\n  );\n}\n\nexport default LoaderDoc;\n","import React, { useState } from \"react\";\nimport \"./RightPanel.css\";\nimport TextDoc from \"./TextDoc\";\nimport ButtonDoc from \"./ButtonDoc\";\nimport SelectableDoc from \"./SelectableDoc\";\nimport LoaderDoc from './LoaderDoc';\n\nfunction getData(selected) {\n  switch (selected) {\n    case \"Text\":\n      return <TextDoc />;\n    case \"Button\":\n      return <ButtonDoc />;\n    case \"Selectable\":\n      return <SelectableDoc />;\n    case \"Loader\":\n      return <LoaderDoc />;\n    default:\n      return <TextDoc />;\n  }\n}\n\nfunction RightPanel({ selected }) {\n  return (\n    <div className=\"RightPanel\">\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        {getData(selected)}\n      </div>\n    </div>\n  );\n}\n\nexport default RightPanel;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SideNav, { NavItem, NavText } from \"@trendmicro/react-sidenav\";\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\nimport reactElementToJSXString from \"react-element-to-jsx-string\";\nimport RightPanel from \"./RightPanel\";\n\nfunction App() {\n  const [selected, setSelected] = useState(\"Text\");\n\n  return (\n    <div className=\"App\">\n      <SideNav\n        style={{ backgroundColor: \"#0078FA\" }}\n        expanded\n        onSelect={index => {\n          console.log(\"index\", index);\n          setSelected(index);\n        }}\n      >\n        <SideNav.Nav defaultSelected=\"Text\">\n          <NavItem eventKey=\"Text\">\n            <NavText style={{ fontWeight: \"bold\" }}>Text</NavText>\n          </NavItem>\n          <NavItem eventKey=\"Button\">\n            <NavText style={{ fontWeight: \"bold\" }}>Button</NavText>\n          </NavItem>\n          <NavItem eventKey=\"Selectable\">\n            <NavText style={{ fontWeight: \"bold\" }}>Selectable</NavText>\n          </NavItem>\n          <NavItem eventKey=\"Loader\">\n            <NavText style={{ fontWeight: \"bold\" }}>Loader</NavText>\n          </NavItem>\n        </SideNav.Nav>\n      </SideNav>\n      <RightPanel selected={selected} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}